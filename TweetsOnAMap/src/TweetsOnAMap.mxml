<?xml version="1.0" encoding="utf-8"?>

<!--

Data Visualization with Flash Builder: Designing Ria and AIR Applications with Remote Data Services
Author: Cesare Rocchi
Site: http://www.datavisualizationflashbuilder.com/

Copyright (c) 2011, studiomagnolia.com - Cesare Rocchi
        All rights reserved.

        Redistribution and use in source and binary forms, with or without modification, 
        are permitted provided that the following conditions are met:

        - Redistributions of source code must retain the above copyright notice, this list 
                of conditions and the following disclaimer.
        - Redistributions in binary form must reproduce the above copyright notice, this list 
                of conditions and the following disclaimer in the documentation and/or other 
                materials provided with the distribution.
        - Neither the name of studiomagnolia.com nor the names of its contributors may 
                be used to endorse or promote products derived from this software without specific 
                prior written permission.

        THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" 
        AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE 
        IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE 
        ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE 
        LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL 
        DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR 
        SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER 
        CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, 
        OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE 
      OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.



-->

<s:Application xmlns:fx="http://ns.adobe.com/mxml/2009" 
			   xmlns:s="library://ns.adobe.com/flex/spark" 
			   xmlns:mx="library://ns.adobe.com/flex/mx"
			   currentState="startup" 
			   xmlns:twittersearchservice="services.twittersearchservice.*" 
			   xmlns:maps="com.google.maps.*"
			   >
	
	<s:layout>
		<s:VerticalLayout/>
	</s:layout>
	
	<s:states>
		<s:State name="startup"/>
		<s:State name="searching"/>
		<s:State name="error"/>
	</s:states>
	
	<fx:Declarations>
		
		<twittersearchservice:TwitterSearchService 
			id="twitterSearch" 
			fault="currentState = 'error'" 
			result="onTwitterResult(event)"/>
		
	</fx:Declarations>
	
	<fx:Script>
		<![CDATA[
			import com.google.maps.*;
			import com.google.maps.controls.*;
			import com.google.maps.overlays.Marker;
			import com.google.maps.overlays.MarkerOptions;
			import com.google.maps.services.*;
			
			import events.TweetGeocodeEvent;
			
			import mx.collections.ArrayCollection;
			import mx.rpc.events.ResultEvent;
			
			import tweets.Entry;
						
			private var lat:Number = 40.736072;
			private var longit:Number = -73.992062;
			private var rad:Number = 25;
			private var zoomLevel:Number = 12;
			
			private function doSearch():void {
				
				currentState = "searching";
				var geoLocation:String = lat.toString()+","+longit.toString()+","+rad.toString()+"mi";
				twitterSearch.doGeoSearch(geoLocation, keywordInput.text);
				
			}
			
			private function onTwitterResult(event:ResultEvent):void {
				
				currentState = "";
				var twitterResult:ArrayCollection = event.result.entry as ArrayCollection;
				for each (var o:Entry in twitterResult) {
					o.addEventListener(TweetGeocodeEvent.GEOCODE_SUCCESS, onTweetGeocoded);
					o.doGeocode();
				}
				
			}
			
			private function onTweetGeocoded (e:TweetGeocodeEvent):void {
				
				var m:Placemark = e.response.placemarks[0];
				var options:MarkerOptions = new MarkerOptions({hasShadow: true, icon: new TwitterIcon()});
				var marker:Marker = new Marker(m.point, options);
				map.addOverlay(marker);
				
				marker.addEventListener(MapMouseEvent.CLICK, function (event:MapMouseEvent):void {
					
					marker.openInfoWindow(new InfoWindowOptions({
						title: "By "+e.target.author.name, 
						content: e.target.title
					}));
					
				});
				
			}
			
			private function onMapReady(event:MapEvent):void {

				map.setCenter(new LatLng(lat,longit), zoomLevel, MapType.NORMAL_MAP_TYPE);
				map.addControl(new NavigationControl());
				//map.addControl(new MapTypeControl());
			}
			
		]]>
	</fx:Script>
	
	
	<mx:Form enabled.searching="false" 
		height="55" width="100%">
		
		<mx:FormItem 
			direction="horizontal">
			
			<s:TextInput 
				id="keywordInput"
				/>
			
			<s:Button enabled="{keywordInput.text != ''}"
					  label="Search"
					  click="doSearch()"
					  />
			
			<s:Label 
				text="Searching..." 
				text.error="Error in searching"
				paddingTop="7" 
				includeIn="searching,error"/>
			
		</mx:FormItem>
	</mx:Form>
	
	<maps:Map 
		key="INSERT_YOUR_KEY"
		id="map"
		mapevent_mapready="onMapReady(event)" 
		width="100%" height="100%" />
	
</s:Application>
