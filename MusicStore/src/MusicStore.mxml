<?xml version="1.0" encoding="utf-8"?>

<!--

Data Visualization with Flash Builder: Designing Ria and AIR Applications with Remote Data Services
Author: Cesare Rocchi
Site: http://www.datavisualizationflashbuilder.com/

        Copyright (c) 2011, studiomagnolia.com - Cesare Rocchi
        All rights reserved.

        Redistribution and use in source and binary forms, with or without modification, 
        are permitted provided that the following conditions are met:

        - Redistributions of source code must retain the above copyright notice, this list 
                of conditions and the following disclaimer.
        - Redistributions in binary form must reproduce the above copyright notice, this list 
                of conditions and the following disclaimer in the documentation and/or other 
                materials provided with the distribution.
        - Neither the name of studiomagnolia.com nor the names of its contributors may 
                be used to endorse or promote products derived from this software without specific 
                prior written permission.

        THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" 
        AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE 
        IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE 
        ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE 
        LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL 
        DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR 
        SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER 
        CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, 
        OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE 
        OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.



-->

<s:Application xmlns:fx="http://ns.adobe.com/mxml/2009" 
			   xmlns:s="library://ns.adobe.com/flex/spark" 
			   xmlns:mx="library://ns.adobe.com/flex/mx" 
			   minWidth="955" minHeight="600" 
			   width="550" height="450" 
			   currentState="startup" 
			   xmlns:getsongsservice="services.getsongsservice.*">
	
	<fx:Script>
		<![CDATA[
			import com.adobe.serializers.utility.TypeUtility;
			
			import mx.collections.ArrayCollection;
			import mx.controls.Alert;
			import mx.events.FlexEvent;
			
			[Bindable]
			private var stores:ArrayCollection = new ArrayCollection(['us', 'it', 'au']);
			
			protected function searchSongs():void {
				this.currentState = 'searching';
				GetSongsListResult.token = getSongsService.GetSongsList(artistInput.text, storeCode.selectedItem);
			}

		]]>
	</fx:Script>
	
	<s:states>
		<s:State name="startup"/>
		<s:State name="searching"/>
		<s:State name="searchSuccessful"/>
		<s:State name="searchError"/>
	</s:states>
	
	<fx:Declarations>
		<s:CallResponder id="GetSongsListResult"/>
		<getsongsservice:GetSongsService id="getSongsService" result="currentState='searchSuccessful'" fault="currentState='searchError'" showBusyCursor="true"/>
	</fx:Declarations>

	
	<s:Label x="174" y="21" text="Music Store" fontSize="36" fontWeight="bold"/>
	<s:TextInput id="artistInput" x="52" y="108" width="160" height="25" enabled.searching="false"/>
	<s:ComboBox id="storeCode" dataProvider="{stores}" x="220" y="108" width="60" height="25" enabled.searching="false"/>
	<s:List x="51" y="164" width="201" height="246" includeIn="searchSuccessful" id="list" labelField="trackName">
		<s:AsyncListView list="{TypeUtility.convertToCollection(GetSongsListResult.lastResult.results)}"/>
	</s:List>
	<mx:Image x="273" y="164" width="100" height="100" includeIn="searchSuccessful"
			   source="{list.selectedItem.artworkUrl100}"/>
	
	<mx:Form x="273" y="272" width="250" height="140" includeIn="searchSuccessful">
		
		<mx:FormHeading label="Details"/>
		<mx:FormItem label="Album name">
			<s:Label text="{list.selectedItem.collectionName}"/>	
		</mx:FormItem>
		
		<mx:FormItem label="Track price">
			<s:Label text="{list.selectedItem.trackName}" />
		</mx:FormItem>
		
		<mx:FormItem label="Album price">
			<s:Label text="{list.selectedItem.collectionPrice}"/>
		</mx:FormItem>
	</mx:Form>
	<s:Button x="303" y="108" label="Search" height="25" enabled.searching="false" click="searchSongs()"/>
	<s:Label x="52" y="144" text="Loading ..." width="160" includeIn="searchError,searching" text.searchError="Error in searching."/>
	
</s:Application>
